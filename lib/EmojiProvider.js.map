{"version":3,"sources":["../src/EmojiProvider.js"],"names":["EmojiProvider","loadProperties","fs","readFile","path","resolve","__dirname","error","content","properties","JSON","parse","keys","Object","getSuggestions","editor","replacementPrefix","prefix","getPrefix","length","Number","charAt","slice","unicodeEmojis","getUnicodeEmojiSuggestions","cm","cursor","getCursor","token","getTokenAt","currentWord","string","regexMatch","match","wordRegex","console","log","words","fuzzaldrin","filter","Array","from","map","word","text","emoji","rightLabel"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;AAGO,MAAMA,aAAN,CAAoB;AAAA;AAAA,uCACd,iBADc;;AAAA,wCAEb,EAFa;;AAAA,kCAGnB,EAHmB;AAAA;;AAK1BC,EAAAA,cAAc,GAAG;AAChB,WAAOC,EAAE,CAACC,QAAH,CAAYC,IAAI,CAACC,OAAL,CAAaC,SAAb,EAAwB,IAAxB,EAA8B,iBAA9B,CAAZ,EAA8D,CAACC,KAAD,EAAQC,OAAR,KAAoB;AACxF,UAAID,KAAJ,EAAW;AAAE;AAAQ;;AACrB,WAAKE,UAAL,GAAkBC,IAAI,CAACC,KAAL,CAAWH,OAAX,CAAlB;AACA,aAAO,KAAKI,IAAL,GAAYC,MAAM,CAACD,IAAP,CAAY,KAAKH,UAAjB,CAAnB;AACA,KAJM,CAAP;AAKA;;AAEDK,EAAAA,cAAc,CAACC,MAAD,EAAQ;AACrB,QAAIC,iBAAJ;AACA,QAAIC,MAAM,GAAG,KAAKC,SAAL,CAAeH,MAAf,CAAb;;AACA,QAAI,EAAE,CAACE,MAAM,IAAI,IAAV,GAAiBA,MAAM,CAACE,MAAxB,GAAiCC,MAAlC,KAA6C,CAA/C,CAAJ,EAAuD;AAAE,aAAO,EAAP;AAAW;;AAEpE,QAAIH,MAAM,CAACI,MAAP,CAAc,CAAd,MAAqB,GAAzB,EAA8B;AAC7BL,MAAAA,iBAAiB,GAAGC,MAApB;AACAA,MAAAA,MAAM,GAAGA,MAAM,CAACK,KAAP,CAAa,CAAb,CAAT;AACA;;AAED,UAAMC,aAAa,GAAG,KAAKC,0BAAL,CAAgCP,MAAhC,CAAtB;AACA,WAAOM,aAAP;AACA;;AAEDL,EAAAA,SAAS,CAACO,EAAD,EAAI;AACZ,UAAMC,MAAM,GAAGD,EAAE,CAACE,SAAH,EAAf;AACA,UAAMC,KAAK,GAAGH,EAAE,CAACI,UAAH,CAAcH,MAAd,EAAsB,IAAtB,CAAd;AACA,UAAMI,WAAW,GAAI,IAAGF,KAAK,CAACG,MAAO,EAArC,CAHY,CAG2B;;AACvC,UAAMC,UAAU,GAAGF,WAAW,CAACG,KAAZ,CAAkB,KAAKC,SAAvB,CAAnB;AACA,UAAMD,KAAK,GAAGD,UAAU,GAAGA,UAAU,CAAC,CAAD,CAAb,GAAmB,GAA3C;AACA,WAAOC,KAAP;AACA;;AAEDT,EAAAA,0BAA0B,CAACP,MAAD,EAAQ;AACjCkB,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAU,KAAKxB,IAA3B;AACA,UAAMyB,KAAK,GAAGC,UAAU,CAACC,MAAX,CAAkB,KAAK3B,IAAvB,EAA6BK,MAAM,CAACK,KAAP,CAAa,CAAb,CAA7B,CAAd;AACA,WAAOkB,KAAK,CAACC,IAAN,CAAWJ,KAAX,EAAkBK,GAAlB,CAAuBC,IAAD,KAC5B;AACCC,MAAAA,IAAI,EAAE,KAAKnC,UAAL,CAAgBkC,IAAhB,EAAsBE,KAD7B;AAEC7B,MAAAA,iBAAiB,EAAEC,MAFpB;AAGC6B,MAAAA,UAAU,EAAEH;AAHb,KAD4B,CAAtB,CAAP;AAMA;;AA7CyB","sourcesContent":["import * as fs from 'fs'\nimport * as path from 'path'\nimport * as fuzzaldrin from 'fuzzaldrin'\n\n\nexport class EmojiProvider {\n\twordRegex = /::?[\\w\\d_\\+-]+$/\n\tproperties = {}\n\tkeys = []\n\n\tloadProperties() {\n\t\treturn fs.readFile(path.resolve(__dirname, '..', 'properties.json'), (error, content) => {\n\t\t\tif (error) { return }\n\t\t\tthis.properties = JSON.parse(content)\n\t\t\treturn this.keys = Object.keys(this.properties)\n\t\t})\n\t}\n\n\tgetSuggestions(editor){\n\t\tlet replacementPrefix\n\t\tlet prefix = this.getPrefix(editor)\n\t\tif (!((prefix != null ? prefix.length : Number) >= 2)) { return [] }\n\n\t\tif (prefix.charAt(1) === ':') {\n\t\t\treplacementPrefix = prefix\n\t\t\tprefix = prefix.slice(1)\n\t\t}\n\n\t\tconst unicodeEmojis = this.getUnicodeEmojiSuggestions(prefix)\n\t\treturn unicodeEmojis\n\t}\n\n\tgetPrefix(cm){\n\t\tconst cursor = cm.getCursor()\n\t\tconst token = cm.getTokenAt(cursor, true)\n\t\tconst currentWord = `:${token.string}` //prepend ':'\n\t\tconst regexMatch = currentWord.match(this.wordRegex)\n\t\tconst match = regexMatch ? regexMatch[0] : ':'\n\t\treturn match\n\t}\n\n\tgetUnicodeEmojiSuggestions(prefix){\n\t\tconsole.log(\"keys \" + this.keys)\n\t\tconst words = fuzzaldrin.filter(this.keys, prefix.slice(1))\n\t\treturn Array.from(words).map((word) => (\n\t\t\t{\n\t\t\t\ttext: this.properties[word].emoji,\n\t\t\t\treplacementPrefix: prefix,\n\t\t\t\trightLabel: word\n\t\t\t}))\n\t}\n}\n"],"file":"EmojiProvider.js"}